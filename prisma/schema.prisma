// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?

  username String? @unique
  credits  Int     @default(5)

  image    String?
  accounts Account[]
  sessions Session[]

  avatars  Avatar[]
  feedback Feedback[]
  votes    Vote[]
}

model Avatar {
  id     String @id @default(cuid())
  prompt String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@index([userId])
}

model Feedback {
  id   String @id @default(cuid())
  text String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  votes Vote[]

  @@index([userId])
}

model Vote {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  feedback   Feedback @relation(fields: [feedbackId], references: [id], onDelete: Cascade)
  feedbackId String

  @@index([userId])
  @@index([feedbackId])
}
